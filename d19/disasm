# Stack: []
0x4 MSTORE(0x40, 0x60)
0xC JUMPI(:label0, CALLDATASIZE() < 0x4)

# Stack: []
0x34    PUSH(CALLDATALOAD(0x0) / 0x100000000000000000000000000000000000000000000000000000000 & 0xFFFFFFFF)
0x3A    DUP1
0x3F    JUMPI(:label3, POP() == 0xEA879634)

:label0
# Stack: []
0x4E    JUMPI(:label2, CALLVALUE() < 0x2386F26FC10000)

# Stack: []
0x4F    PUSH(0xEC29EE18C83562D4F2E0CE62E38829741C2901DA844C015385A94D8C9F03D486)
0x70    PUSH(0x2)
0x72    PUSH(0x0)
0x74    PUSH(CALLDATASIZE())
0x75    PUSH(0x11)
0x7F    MSTORE(0x20 + MLOAD(0x40), 0x0)
0x82    PUSH(MLOAD(0x40))
0xA4    DUP1
0xA5    MSTORE(POP(), 0x485631372D000000000000000000000000000000000000000000000000000000)
0xA8    DUP1
0xA9    PUSH(POP() + 0x5)
0xAA    DUP5
0xAB    DUP5
0xAC    DUP1
0xAD    DUP3
0xAE    DUP5
0xAF    CALLDATACOPY(POP(), POP(), POP())
0xB0    DUP3
0xB1    PUSH(POP() + POP())
0xB2    SWAP2
0xB3    POP()
0xB4    POP()
0xB5    DUP3
0xDB    DUP1
0xDC    MSTORE(POP(), 0x100000000000000000000000000000000000000000000000000000000000000 * (0xFF & POP()))
0xDF    PUSH(0x1 + POP())
0xE0    SWAP4
0xE1    POP()
0xE2    POP()
0xE3    POP()
0xE4    POP()
0xE9    PUSH(MLOAD(0x40))
0xEA    DUP1
0xEB    DUP3
0xED    DUP1
0xF0    DUP4
0xFC    JUMPI(:label1, !!CALL(GAS() - 0x646E, POP(), 0x0, POP(), POP() - POP(), POP(), 0x20))

# Stack: [@0xDF 0x2
# 0xEC29EE18C83562D4F2E0CE62E38829741C2901DA844C015385A94D8C9F03D486]
0xFD    PUSH(0x0)
0xFF    DUP1
0x100   REVERT()

:label1
# Stack: [@0xDF 0x2
# 0xEC29EE18C83562D4F2E0CE62E38829741C2901DA844C015385A94D8C9F03D486]
0x102   POP()
0x103   POP()
0x106   PUSH(MLOAD(0x40))
0x107   DUP1
0x10A   POP()
0x10D   PUSH(MLOAD(0x40))
0x10F   DUP1
0x110   MSTORE(POP(), MLOAD(POP()))
0x111   PUSH(0x40)
0x115   DUP2
0x117   DUP1
0x119   MSTORE(POP() + 0x20, POP())
0x11C   DUP1
0x11D   DUP3
0x11F   MSTORE(POP() + POP(), 0x11)
0x143   DUP2
0x145   MSTORE(POP() + 0x60, 0x596F7572206B657920697320686572652E000000000000000000000000000000)
0x149   SWAP1
0x14A   PUSH(POP() + 0x80)
0x14C   PUSH(MLOAD(POP()))
0x14D   DUP1
0x14E   SWAP2
0x151   LOG1(POP(), POP() - POP(), POP()) # output

:label2
# Stack: []
0x153   STOP()

:label3
# Stack: [@0x34]
0x15A   JUMPI(:label4, !CALLVALUE())

# Stack: [@0x34]
0x15B   PUSH(0x0)
0x15D   DUP1
0x15E   REVERT()

:label4
# Stack: [@0x34]
0x160   PUSH(:label2)
0x166   PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)
0x17C   DUP1
0x17D   PUSH(POP() & SLOAD(0x0))
0x17E   SWAP1
0x181   PUSH(BALANCE(ADDRESS() & POP()))
0x182   DUP1
0x187   PUSH(0x8FC * !POP())
0x188   SWAP1
0x18B   PUSH(MLOAD(0x40))
0x190   PUSH(MLOAD(0x40))
0x191   DUP1
0x192   DUP3
0x194   DUP1
0x195   DUP4
0x196   DUP7
0x197   DUP7
0x198   PUSH(CALL(POP(), POP(), POP(), POP(), POP() - POP(), POP(), 0x0))
0x199   SWAP4
0x19A   POP()
0x19B   POP()
0x19C   POP()
0x19D   POP()
0x1A3   JUMPI(:label5, !!POP())

# Stack: [:label2 @0x34]
0x1A4   PUSH(0x0)
0x1A6   DUP1
0x1A7   REVERT()

:label5
# Stack: [:label2 @0x34]
0x1A9   JUMP(POP())

